function sum(num1) {
 	return function(num2) {
		return num1 + num2;
    }   
}

//

function sum(num1) {
	let num3 = 1;
 	return function(num2) {
		return num1 + num2 + num3;
    }   
}

//data privacy
const getSecret = (secret) => {
  return {
    get: () => secret
  };
};

test('Closure for object privacy.', assert => {
  const msg = '.get() should have access to the closure.';
  const expected = 1;
  const obj = getSecret(1);

  const actual = obj.get();
  assert.equal(actual, expected, msg);
});

//stateful function
const secret = (msg) => () => msg;

test('secret', assert => {
  const msg = 'secret() should return a function that returns the passed secret.';

  const theSecret = 'Closures are easy.';
  const mySecret = secret(theSecret);

  const actual = mySecret();
  const expected = theSecret;

  assert.equal(actual, expected, msg);
  assert.end();
});
